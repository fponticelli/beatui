/**
 * Background Utilities Generator
 *
 * This script generates the bg.css file from design tokens defined in src/tokens/colors.ts.
 * It creates utility classes for background colors with different variants:
 *
 * - Solid: .bu-bg-{color} (uses 500 shade in light mode, 600 in dark)
 * - Light: .bu-bg-light-{color} (uses 200 shade in light mode, 800 in dark)
 * - Lighter: .bu-bg-lighter-{color} (uses 100 shade in light mode, 900 in dark)
 *
 * Special colors (inherit, white, black, transparent) have custom handling.
 *
 * This file is automatically generated during the build process via Vite plugins.
 * Do not edit the generated bg.css file directly - modify the tokens instead.
 */

import { spawnSync } from 'child_process'

function formatWithPrettier(filePath: string) {
  try {
    const res = spawnSync(
      'pnpm',
      ['exec', 'prettier', '--log-level', 'warn', '--write', filePath],
      { stdio: 'inherit' }
    )
    if (res.status === 0) return
  } catch {}
  try {
    const res = spawnSync(
      'npx',
      ['prettier', '--log-level', 'warn', '--write', filePath],
      { stdio: 'inherit' }
    )
    if (res.status === 0) return
  } catch {}
  try {
    spawnSync('prettier', ['--write', filePath], { stdio: 'inherit' })
  } catch {
    console.warn('Warning: Prettier not available to format', filePath)
  }
}

import fs from 'fs'
import path from 'path'
import { generateBackgroundUtilities } from '../src/tokens/colors.js'

// Generate background utilities CSS content
function generateBgUtilitiesCSS(): string {
  return generateBackgroundUtilities()
}

// Ensure directory exists
function ensureDirectoryExists(filePath: string) {
  const dirname = path.dirname(filePath)
  if (!fs.existsSync(dirname)) {
    fs.mkdirSync(dirname, { recursive: true })
  }
}

// Main function
function main() {
  const outputPath = path.resolve(
    process.cwd(),
    'src/styles/tailwind/legacy-utilities/bg.css'
  )
  const cssContent = generateBgUtilitiesCSS()

  ensureDirectoryExists(outputPath)
  fs.writeFileSync(outputPath, cssContent, 'utf8')
  try {
    formatWithPrettier(outputPath)
  } catch {}

  console.log(`âœ… Background utilities generated at ${outputPath}`)
}

main()
